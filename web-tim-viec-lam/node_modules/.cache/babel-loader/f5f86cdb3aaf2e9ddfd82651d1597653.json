{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nconst axiosClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'content-type': 'application/json, text/plan '\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(async config => {\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n}, error => {\n  throw error;\n});\nexport default axiosClient;","map":{"version":3,"sources":["D:/Project-Nodejs/web-tim-viec/web-tim-viec-lam/src/api/axiosClient.js"],"names":["axios","queryString","axiosClient","create","baseURL","process","env","REACT_APP_API_URL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADQ;AAE7BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GAFoB;AAK7BC,EAAAA,gBAAgB,EAAEC,MAAM,IAAIT,WAAW,CAACU,SAAZ,CAAsBD,MAAtB;AALC,CAAb,CAApB;AAQAR,WAAW,CAACU,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,MAAOC,MAAP,IAAkB;AACnD,SAAOA,MAAP;AACH,CAFD;AAIAb,WAAW,CAACU,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CAAuCE,QAAD,IAAc;AAChD,MAAGA,QAAQ,IAAIA,QAAQ,CAACC,IAAxB,EAA6B;AACzB,WAAOD,QAAQ,CAACC,IAAhB;AACH;;AACD,SAAOD,QAAP;AACH,CALD,EAKIE,KAAD,IAAW;AACV,QAAMA,KAAN;AACH,CAPD;AASA,eAAehB,WAAf","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    headers: {\r\n        'content-type': 'application/json, text/plan ',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if(response && response.data){\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;"]},"metadata":{},"sourceType":"module"}